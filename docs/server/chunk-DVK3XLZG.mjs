import './polyfills.server.mjs';
import{C as re,b as L,c as C,d as G,e as U,f as x,g as X,h as q,j as J,k as W,m as K,n as z,p as Z,q as k,s as ee,u as te,v as ie}from"./chunk-XTPRNWS5.mjs";import{l as ae}from"./chunk-HUVXLNFB.mjs";import{l as B,p as j,r as Q}from"./chunk-CJQEX7QP.mjs";import{a as oe}from"./chunk-KC5OOQG4.mjs";import{h as V}from"./chunk-LOK34OJP.mjs";import{b as N,h as ne}from"./chunk-4OWJMABH.mjs";import{Ab as b,Bb as m,Cb as p,Db as f,Hb as w,Jb as S,Kb as d,Pb as M,Qb as A,Rb as T,Ub as P,Vb as O,Xb as R,Ya as l,Za as $,_b as H,fa as F,gc as I,na as h,oa as _,pb as v,rb as c,wb as D,yb as Y,zb as g}from"./chunk-ARX2IPHX.mjs";import{a as y}from"./chunk-5XUXGTUW.mjs";var de=(i,a)=>a.value;function le(i,a){if(i&1&&f(0,"info-card",5),i&2){let n=a.$implicit;c("icon",n.icon)("value",n.value)("valueType",n.valueType)("subtitle",n.subtitle)("color",n.color)("accentColor",n.color)}}function se(i,a){if(i&1&&(m(0,"section",2),g(1,le,1,6,"info-card",5,de),p()),i&2){let n=d();l(),b(n.infoCards)}}function ce(i,a){if(i&1){let n=w();m(0,"div",6)(1,"div",7),f(2,"ngx-charts-area-chart",8),p(),m(3,"div",9)(4,"ngx-charts-pie-chart",10),S("select",function(e){h(n);let o=d();return _(o.onSelect(e))})("activate",function(e){h(n);let o=d();return _(o.onActivate(e))})("deactivate",function(e){h(n);let o=d();return _(o.onDeactivate(e))}),p()()()}if(i&2){let n=d();l(2),c("scheme",n.dividendChartColorScheme)("results",n.dividendLineChartData)("xAxisLabel",n.selectedSymbolLabel)("yAxisLabel","Dividend Rate")("showXAxisLabel",!0)("showYAxisLabel",!0)("xAxis",!0)("yAxis",!0)("autoScale",!0)("animations",!0)("gradient",!0)("yScaleMin",0),l(2),c("scheme","picnic")("results",n.pieChartData)("animations",!0)("explodeSlices",!0)("labels",!0)("legend",!0)("legendTitle","Tickers")("arcWidth",.75)}}function me(i,a){if(i&1&&(m(0,"th",17),O(1),p()),i&2){let n=d().$index,t=d(2);l(),R(" ",t.headers[n]," ")}}function pe(i,a){if(i&1&&(m(0,"div",19),f(1,"stock-name-card",20),p()),i&2){let n=d().$implicit;l(),c("stock",n)}}function fe(i,a){if(i&1){let n=w();m(0,"span",21),S("click",function(){h(n);let e=d().$implicit,o=d(3);return _(o.updateChart(e.symbol))}),O(1),p()}if(i&2){let n=d().$implicit,t=d().$index,e=d(2);l(),R(" ",e.cells[t](n)," ")}}function ue(i,a){if(i&1&&(m(0,"td",18),v(1,pe,2,1,"div",19)(2,fe,2,1,"span"),p()),i&2){let n=d().$index;l(),D(n===0?1:2)}}function ve(i,a){if(i&1&&(m(0,"div",12),v(1,me,2,1,"th",15)(2,ue,3,1,"td",16),p()),i&2){let n=a.$implicit;c("matColumnDef",n)}}function he(i,a){i&1&&f(0,"tr",22)}function _e(i,a){i&1&&f(0,"tr",23)}function Ce(i,a){if(i&1&&(m(0,"table",11),g(1,ve,3,1,"div",12,Y),v(3,he,1,0,"tr",13)(4,_e,1,0,"tr",14),p()),i&2){let n=d();c("dataSource",n.dataSource),l(),b(n.columnDefs),l(2),c("matHeaderRowDef",n.columnDefs)("matHeaderRowDefSticky",!0),l(),c("matRowDefColumns",n.columnDefs)}}var Ye=(()=>{let a=class a{constructor(t){this.dataService=t,this.monthStrings=["January","February","March","April","May","June","July","August","September","October","November","December"],this.dividendPayoutMonths={AAPL:[2,5,8,11],ABBV:[1,4,7,10],ARCC:[3,6,9,12],CVS:[1,4,7,10],DIS:[7,12],DLR:[3,6,9,12],DVN:[3,6,9,12],ENB:[2,5,8,11],EPD:[1,4,7,10],ET:[2,5,8,10],GILD:[3,6,9,12],MO:[3,6,9,12],MSFT:[2,5,8,11],NKE:[3,6,9,12],O:[1,2,3,4,5,6,7,8,9,10,11,12],PFE:[5,7,11,1],SBUX:[2,5,8,11],SCHD:[3,6,9,12],SPG:[3,6,9,12],TPVG:[3,6,9,12],VICI:[3,6,9,12],VYM:[3,6,9,12]},this.browser="",this.dividendIncome=0,this.portfolioYieldOnCost=0,this.selectedSymbol="O",this.selectedSymbolLabel="",this.infoCards=[],this.dividendLineChartData=[],this.dividendChartColorScheme={domain:["teal"]},this.currentMonth=new Date().getMonth(),this.dividendIncomeChartData=Array.from({length:12},(e,o)=>({name:o,series:[]})),this.dividendProjectionChartData=Array.from({length:12},(e,o)=>({name:o,series:[]})),this.pieChartData=[],this.echartUpdateOptions={yAxis:{},xAxis:{data:[]},series:[{data:[]}]},this.dataSource=new ie,this.headers=["Symbol","Dividend Income","Yield on Cost","Dividend Rate","Dividend Rate (TTM)","Dividend Yield","Dividend Yield (TTM)","5Y Avg. Yield","Payout Ratio","FCF Payout Ratio","Last Dividend Paid","Ex-dividend Date","Dividend Date"],this.columnDefs=["symbol","dividendIncome","yieldOnCost","dividendRate","trailingAnnualDividendRate","dividendYield","trailingAnnualDividendYield","fiveYearAvgDividendYield","payoutRatio","freeCashflowPayoutRatio","lastDividendValue","exDividendDate","dividendDate"],this.cells=[e=>"",e=>`$${e.dividendIncome.toFixed(2)}`,e=>`${(e.yieldOnCost*100).toFixed(2)}%`,e=>"$"+(e.dividendRate?.fmt||e.dividendRate.toFixed(2)),e=>e.trailingAnnualDividendRate?.fmt||"N/A",e=>e.dividendYield?.fmt||e.dividendYield*100+"%",e=>e.trailingAnnualDividendYield?.fmt||"N/A",e=>e.fiveYearAvgDividendYield?.fmt||"N/A",e=>e.payoutRatio?.fmt||"N/A",e=>e.quoteType==="EQUITY"&&e.freeCashflowPayoutRatio!==0?`${(e.freeCashflowPayoutRatio*100).toFixed(2)}%`:"N/A",e=>e.lastDividendValue?.fmt||"N/A",e=>e.calendarEvents?.exDividendDate?new Date(e.calendarEvents.exDividendDate?.fmt).toDateString():"N/A",e=>e.calendarEvents?.dividendDate?new Date(e.calendarEvents.dividendDate?.fmt).toDateString():"N/A"]}ngOnInit(){this.portfolioHoldings=this.dataService.portfolioHoldings,this.portfolioData=this.dataService.portfolioData,this.dataSource.data=Object.values(this.portfolioData).filter(t=>t.dividendYield?.raw>0||t.dividendYield>0).map(t=>y(y({},this.portfolioHoldings[t.symbol]),t)),this.dataSource.data.forEach(t=>{if(this.pieChartData.push({name:t.symbol,value:t.dividendIncome}),t.calendarEvents?.dividendDate){let e=t.calendarEvents,o=new Date(e.dividendDate.fmt),r=o.getMonth();r>=new Date().getMonth()&&this.dividendIncomeChartData[r].series.push({name:`${t.symbol} | ${o.toDateString()}`,value:t.lastDividendValue?.raw*t.shares})}this.dividendPayoutMonths[t.symbol.toUpperCase()].forEach((e,o,r)=>{let u=e-1,s=(t.dividendRate?.raw||t.dividendRate)/r.length;this.dividendProjectionChartData[u].series.push({name:`${t.symbol} | ${t.shortName}`,value:t.shares*s})})}),this.dividendIncome=this.portfolioHoldings.dividendIncome,this.portfolioYieldOnCost=this.portfolioHoldings.yieldOnCost,this.browser=this.getBrowserName(),this.setInfoCards(),this.updateChart(this.selectedSymbol,!1)}ngAfterViewInit(){this.dataSource.sort=this.sort}getBrowserName(){let t=window?.navigator.userAgent.toLowerCase();return t.indexOf("edge")>-1?"Microsoft Edge":t.indexOf("edg")>-1?"Chromium-based Edge":t.indexOf("opr")>-1?"Opera":t.indexOf("chrome")>-1?"Chrome":t.indexOf("trident")>-1?"Internet Explorer":t.indexOf("firefox")>-1?"Firefox":t.indexOf("safari")>-1?"Safari":"other"}setInfoCards(){this.infoCards=[{icon:"payments",value:this.dividendIncome.toFixed(4),valueType:"currency",subtitle:"Projected Annual Income",color:null},{icon:"payments",value:(this.dividendIncome/4).toFixed(4),valueType:"currency",subtitle:"Average Quarterly Income",color:null},{icon:"payments",value:(this.dividendIncome/12).toFixed(4),valueType:"currency",subtitle:"Average Monthly Income",color:"teal"},{icon:"payments",value:(this.dividendIncome/365).toFixed(4),valueType:"currency",subtitle:"Average Daily Income",color:null},{icon:"payments",value:(this.dividendIncome/8765.81).toFixed(4),valueType:"currency",subtitle:"Average Hourly Income",color:null},{icon:"payments",value:(this.dividendIncome/525948.766).toFixed(4),valueType:"currency",subtitle:"Average Income Per Minute",color:null},{icon:"percent",value:this.portfolioYieldOnCost.toFixed(4),valueType:"percentage",subtitle:"Portfolio YOC",color:"teal"}]}updateChart(t,e=!0){let o={title:{text:""},legend:{data:["Dividend $"]},tooltip:{},xAxis:{data:[],splitLine:{show:!1}},yAxis:{},series:[{name:"Dividend $",type:"bar",data:[],emphasis:{focus:"series"},animationDelay:function(s){return s*10}}],animationEasing:"elasticOut",animationDelayUpdate:function(s){return s*5}},r=this.dataSource.data.filter(s=>s.symbol===t)[0],u={name:`${r.symbol} | ${r.shortName}`,series:[]},E=this.dataService.portfolioDividendHistory[r.symbol];Object.entries(E).forEach(s=>{u.series.push({name:new Date(s[0].split("-").join(" ")),value:+s[1]}),o.xAxis.data.push(s[0].split("-").join(" ")),o.series[0].data.push(+s[1])}),this.echartOptions=o,this.dividendLineChartData=[u],this.selectedSymbol=r.symbol,this.selectedSymbolLabel=`
      ${r.symbol} | 
      ${r.longName} | 
      ${r.profile?.sector||"ETF"} |
      ${r.profile?.industry||"ETF"}
    `,e&&window.scroll({top:800,left:0,behavior:"smooth"})}onSelect(t){let e=t.name||t;this.updateChart(e)}onActivate(t){}onDeactivate(t){}};a.\u0275fac=function(e){return new(e||a)($(oe))},a.\u0275cmp=F({type:a,selectors:[["portfolio-dividend"]],viewQuery:function(e,o){if(e&1&&(M(x,5),M(C,5)),e&2){let r;A(r=T())&&(o.table=r.first),A(r=T())&&(o.sort=r.first)}},standalone:!0,features:[H],decls:7,vars:3,consts:[["dividendHistoryRef",""],["dividendTableRef",""],[1,"dividend-cards-container"],["title","Dividend History",3,"mainContentRef"],["title","Dividend Details",3,"mainContentRef"],[3,"icon","value","valueType","subtitle","color","accentColor"],[1,"add-flex"],[1,"chart-container","dividend-chart"],[3,"scheme","results","xAxisLabel","yAxisLabel","showXAxisLabel","showYAxisLabel","xAxis","yAxis","autoScale","animations","gradient","yScaleMin"],[1,"chart-container","dividend-pie"],[3,"select","activate","deactivate","scheme","results","animations","explodeSlices","labels","legend","legendTitle","arcWidth"],["mat-table","","matSort","","matSortActive","yieldOnCost","matSortDirection","desc",3,"dataSource"],[3,"matColumnDef"],["mat-header-row","",4,"matHeaderRowDef","matHeaderRowDefSticky"],["mat-row","",4,"matRowDef","matRowDefColumns"],["mat-header-cell","","mat-sort-header","",4,"matHeaderCellDef"],["mat-cell","",4,"matCellDef"],["mat-header-cell","","mat-sort-header",""],["mat-cell",""],[1,"table-col-0"],[3,"stock"],[3,"click"],["mat-header-row",""],["mat-row",""]],template:function(e,o){if(e&1&&(v(0,se,3,0,"section",2)(1,ce,5,20,"ng-template",null,0,I),f(3,"container-card",3),v(4,Ce,5,4,"ng-template",null,1,I),f(6,"container-card",4)),e&2){let r=P(2),u=P(5);D(o.infoCards?0:-1),l(3),c("mainContentRef",r),l(3),c("mainContentRef",u)}},dependencies:[ne,ae,L,N,V,U,C,G,te,x,q,z,J,X,Z,W,K,k,ee,Q,B,j,re],styles:["echarts-vertical-bar-chart[_ngcontent-%COMP%]{width:100%}.dividend-cards-container[_ngcontent-%COMP%]{display:flex;align-items:center;flex-wrap:wrap;margin-top:1rem;margin-bottom:1rem}.safari-charts-container[_ngcontent-%COMP%]{display:flex;align-items:center}.table-col-0[_ngcontent-%COMP%]{display:flex;align-items:center;align-content:center;margin:0;padding:0}td.mat-mdc-cell[_ngcontent-%COMP%]:first-of-type   td.mat-mdc-footer-cell[_ngcontent-%COMP%]:first-of-type{padding-left:0}.mdc-data-table__header-cell[_ngcontent-%COMP%], .mdc-data-table__cell[_ngcontent-%COMP%]{padding:0}.refresh-button[_ngcontent-%COMP%]{margin-right:1rem}.dividend-income[_ngcontent-%COMP%]{max-width:10%}.dividend-chart[_ngcontent-%COMP%]{width:60%}.dividend-pie[_ngcontent-%COMP%]{width:40%}"]});let i=a;return i})();export{Ye as a};
